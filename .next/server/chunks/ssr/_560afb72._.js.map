{"version":3,"sources":["turbopack:///[project]/lib/filters.ts","turbopack:///[project]/components/UploadArea.tsx","turbopack:///[project]/node_modules/zustand/esm/vanilla.mjs","turbopack:///[project]/node_modules/zustand/esm/react.mjs","turbopack:///[project]/node_modules/zustand/esm/middleware.mjs","turbopack:///[project]/store/useDitherStore.ts","turbopack:///[project]/components/GlassCard.tsx","turbopack:///[project]/components/ControlPanel.tsx","turbopack:///[project]/lib/dithering.ts","turbopack:///[project]/lib/shaders/ShaderProgram.ts","turbopack:///[project]/lib/shaders/glslShaders.ts","turbopack:///[project]/lib/shaders/shaderRenderer.ts","turbopack:///[project]/components/ComparisonSlider.tsx","turbopack:///[project]/components/PresetManager.tsx","turbopack:///[project]/components/KeyboardShortcuts.tsx","turbopack:///[project]/components/DitherCanvas.tsx","turbopack:///[project]/app/page.tsx"],"sourcesContent":["import { DitherSettings } from '@/store/useDitherStore';\n\n// Main filter application function (Canvas 2D only)\nexport function applyFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  switch (settings.filter) {\n    case 'liquid-metal':\n      liquidMetalFilter(ctx, settings);\n      break;\n    case 'mesh-gradient':\n      meshGradientFilter(ctx, settings);\n      break;\n    case 'static-mesh':\n      staticMeshGradientFilter(ctx, settings);\n      break;\n    case 'radial-gradient':\n      staticRadialGradientFilter(ctx, settings);\n      break;\n    case 'grain-gradient':\n      grainGradientFilter(ctx, settings);\n      break;\n    case 'dot-orbit':\n      dotOrbitFilter(ctx, settings);\n      break;\n    case 'dot-grid':\n      dotGridFilter(ctx, settings);\n      break;\n    case 'warp':\n      warpFilter(ctx, settings);\n      break;\n  }\n}\n\n// Heatmap gradient effect\nexport function heatmapFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n    const normalized = gray / 255;\n    \n    // Heatmap color mapping\n    let r, g, b;\n    if (normalized < 0.25) {\n      r = 0;\n      g = normalized * 4 * 255;\n      b = 255;\n    } else if (normalized < 0.5) {\n      r = 0;\n      g = 255;\n      b = (0.5 - normalized) * 4 * 255;\n    } else if (normalized < 0.75) {\n      r = (normalized - 0.5) * 4 * 255;\n      g = 255;\n      b = 0;\n    } else {\n      r = 255;\n      g = (1 - normalized) * 4 * 255;\n      b = 0;\n    }\n    \n    data[i] = r * (settings.brightness / 100);\n    data[i + 1] = g * (settings.brightness / 100);\n    data[i + 2] = b * (settings.brightness / 100);\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Liquid Metal effect\nexport function liquidMetalFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const tempData = new Uint8ClampedArray(data);\n  \n  for (let y = 1; y < height - 1; y++) {\n    for (let x = 1; x < width - 1; x++) {\n      const i = (y * width + x) * 4;\n      \n      // Edge detection\n      const gx = \n        -tempData[((y - 1) * width + (x - 1)) * 4] +\n        tempData[((y - 1) * width + (x + 1)) * 4] +\n        -2 * tempData[(y * width + (x - 1)) * 4] +\n        2 * tempData[(y * width + (x + 1)) * 4] +\n        -tempData[((y + 1) * width + (x - 1)) * 4] +\n        tempData[((y + 1) * width + (x + 1)) * 4];\n      \n      const gy =\n        -tempData[((y - 1) * width + (x - 1)) * 4] +\n        -2 * tempData[((y - 1) * width + x) * 4] +\n        -tempData[((y - 1) * width + (x + 1)) * 4] +\n        tempData[((y + 1) * width + (x - 1)) * 4] +\n        2 * tempData[((y + 1) * width + x) * 4] +\n        tempData[((y + 1) * width + (x + 1)) * 4];\n      \n      const magnitude = Math.sqrt(gx * gx + gy * gy);\n      const normalized = Math.min(magnitude / 4, 255);\n      \n      // Metallic color palette\n      const metal = 255 - normalized;\n      data[i] = metal * 0.8;     // R - silver/chrome\n      data[i + 1] = metal * 0.85; // G\n      data[i + 2] = metal;        // B\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Mesh Gradient (animated)\nexport function meshGradientFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const time = Date.now() * 0.001;\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n      \n      const nx = x / width;\n      const ny = y / height;\n      \n      // Multi-point gradient with sine waves\n      const r = Math.sin(nx * 3 + time) * 127 + 128;\n      const g = Math.sin(ny * 3 + time + 2) * 127 + 128;\n      const b = Math.sin((nx + ny) * 3 + time + 4) * 127 + 128;\n      \n      const blend = gray / 255;\n      data[i] = r * blend;\n      data[i + 1] = g * blend;\n      data[i + 2] = b * blend;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Static Mesh Gradient\nexport function staticMeshGradientFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  // Define gradient control points\n  const points = [\n    { x: 0.2, y: 0.2, r: 138, g: 180, b: 248 },\n    { x: 0.8, y: 0.2, r: 248, g: 113, b: 113 },\n    { x: 0.5, y: 0.8, r: 152, g: 251, b: 152 },\n    { x: 0.5, y: 0.5, r: 251, g: 211, b: 141 },\n  ];\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n      \n      const nx = x / width;\n      const ny = y / height;\n      \n      let totalWeight = 0;\n      let r = 0, g = 0, b = 0;\n      \n      // Inverse distance weighting\n      points.forEach(point => {\n        const dx = nx - point.x;\n        const dy = ny - point.y;\n        const dist = Math.sqrt(dx * dx + dy * dy) + 0.001;\n        const weight = 1 / (dist * dist);\n        \n        totalWeight += weight;\n        r += point.r * weight;\n        g += point.g * weight;\n        b += point.b * weight;\n      });\n      \n      const blend = gray / 255;\n      data[i] = (r / totalWeight) * blend;\n      data[i + 1] = (g / totalWeight) * blend;\n      data[i + 2] = (b / totalWeight) * blend;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Static Radial Gradient\nexport function staticRadialGradientFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const centerX = width / 2;\n  const centerY = height / 2;\n  const maxDist = Math.sqrt(centerX * centerX + centerY * centerY);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n      \n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      const normalized = dist / maxDist;\n      \n      // Gradient from center (purple) to edge (blue)\n      const r = 138 + (75 - 138) * normalized;\n      const g = 180 + (0 - 180) * normalized;\n      const b = 248;\n      \n      const blend = gray / 255;\n      data[i] = r * blend;\n      data[i + 1] = g * blend;\n      data[i + 2] = b * blend;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Grain Gradient\nexport function grainGradientFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      \n      // Horizontal gradient\n      const gradientValue = (x / width) * 255;\n      \n      // Add film grain\n      const grain = (Math.random() - 0.5) * 40;\n      \n      const value = Math.max(0, Math.min(255, gradientValue + grain));\n      \n      data[i] = value;\n      data[i + 1] = value * 0.9;\n      data[i + 2] = value * 1.1;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Dot Orbit (animated)\nexport function dotOrbitFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const time = Date.now() * 0.001;\n  const centerX = width / 2;\n  const centerY = height / 2;\n  \n  // Clear canvas\n  data.fill(0);\n  \n  // Draw orbiting dots\n  const numOrbits = 8;\n  const dotsPerOrbit = 12;\n  \n  for (let orbit = 0; orbit < numOrbits; orbit++) {\n    const radius = (orbit + 1) * Math.min(width, height) / (numOrbits * 2);\n    const speed = 1 + orbit * 0.2;\n    \n    for (let dot = 0; dot < dotsPerOrbit; dot++) {\n      const angle = (dot / dotsPerOrbit) * Math.PI * 2 + time * speed;\n      const x = Math.floor(centerX + Math.cos(angle) * radius);\n      const y = Math.floor(centerY + Math.sin(angle) * radius);\n      \n      if (x >= 0 && x < width && y >= 0 && y < height) {\n        const dotSize = 3;\n        for (let dy = -dotSize; dy <= dotSize; dy++) {\n          for (let dx = -dotSize; dx <= dotSize; dx++) {\n            const px = x + dx;\n            const py = y + dy;\n            if (px >= 0 && px < width && py >= 0 && py < height) {\n              if (dx * dx + dy * dy <= dotSize * dotSize) {\n                const i = (py * width + px) * 4;\n                const brightness = 255 - (orbit * 20);\n                data[i] = brightness;\n                data[i + 1] = brightness * 0.8;\n                data[i + 2] = brightness * 1.2;\n                data[i + 3] = 255;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Dot Grid\nexport function dotGridFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const spacing = 15;\n  const dotRadius = 5;\n  \n  for (let y = 0; y < height; y += spacing) {\n    for (let x = 0; x < width; x += spacing) {\n      // Get average brightness in this region\n      let avgBrightness = 0;\n      let count = 0;\n      \n      for (let dy = 0; dy < spacing && y + dy < height; dy++) {\n        for (let dx = 0; dx < spacing && x + dx < width; dx++) {\n          const i = ((y + dy) * width + (x + dx)) * 4;\n          avgBrightness += (data[i] + data[i + 1] + data[i + 2]) / 3;\n          count++;\n        }\n      }\n      \n      avgBrightness /= count;\n      const radius = (avgBrightness / 255) * dotRadius;\n      \n      // Draw dot\n      for (let dy = -dotRadius; dy <= dotRadius; dy++) {\n        for (let dx = -dotRadius; dx <= dotRadius; dx++) {\n          if (dx * dx + dy * dy <= radius * radius) {\n            const px = x + spacing / 2 + dx;\n            const py = y + spacing / 2 + dy;\n            if (px >= 0 && px < width && py >= 0 && py < height) {\n              const i = (py * width + px) * 4;\n              data[i] = 138;\n              data[i + 1] = 180;\n              data[i + 2] = 248;\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Warp Effect\nexport function warpFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const tempData = new Uint8ClampedArray(data);\n  const time = Date.now() * 0.002;\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      \n      // Apply sinusoidal warp\n      const warpX = Math.sin(y * 0.02 + time) * 10;\n      const warpY = Math.cos(x * 0.02 + time) * 10;\n      \n      const srcX = Math.floor(x + warpX);\n      const srcY = Math.floor(y + warpY);\n      \n      if (srcX >= 0 && srcX < width && srcY >= 0 && srcY < height) {\n        const srcI = (srcY * width + srcX) * 4;\n        data[i] = tempData[srcI];\n        data[i + 1] = tempData[srcI + 1];\n        data[i + 2] = tempData[srcI + 2];\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Pixelate effect\nexport function pixelateFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const pixelSize = Math.max(2, Math.floor(settings.colorDepth / 4));\n  \n  for (let y = 0; y < height; y += pixelSize) {\n    for (let x = 0; x < width; x += pixelSize) {\n      let r = 0, g = 0, b = 0, count = 0;\n      \n      // Average color in block\n      for (let dy = 0; dy < pixelSize && y + dy < height; dy++) {\n        for (let dx = 0; dx < pixelSize && x + dx < width; dx++) {\n          const i = ((y + dy) * width + (x + dx)) * 4;\n          r += data[i];\n          g += data[i + 1];\n          b += data[i + 2];\n          count++;\n        }\n      }\n      \n      r /= count;\n      g /= count;\n      b /= count;\n      \n      // Apply to entire block\n      for (let dy = 0; dy < pixelSize && y + dy < height; dy++) {\n        for (let dx = 0; dx < pixelSize && x + dx < width; dx++) {\n          const i = ((y + dy) * width + (x + dx)) * 4;\n          data[i] = r;\n          data[i + 1] = g;\n          data[i + 2] = b;\n        }\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Glitch Effect\nexport function glitchFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const tempData = new Uint8ClampedArray(data);\n  \n  // Random horizontal shifts\n  for (let i = 0; i < 5; i++) {\n    const y = Math.floor(Math.random() * height);\n    const shift = (Math.random() - 0.5) * 50;\n    const sliceHeight = Math.floor(Math.random() * 20) + 5;\n    \n    for (let dy = 0; dy < sliceHeight && y + dy < height; dy++) {\n      for (let x = 0; x < width; x++) {\n        const srcX = Math.floor((x + shift + width) % width);\n        const srcI = ((y + dy) * width + srcX) * 4;\n        const destI = ((y + dy) * width + x) * 4;\n        \n        // RGB channel shift\n        data[destI] = tempData[srcI + 1];     // R from G\n        data[destI + 1] = tempData[srcI + 2]; // G from B\n        data[destI + 2] = tempData[srcI];     // B from R\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Chromatic Aberration\nexport function chromaticAberrationFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const tempData = new Uint8ClampedArray(data);\n  const offset = 5;\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      \n      // Red channel - shift left\n      if (x - offset >= 0) {\n        const srcI = (y * width + (x - offset)) * 4;\n        data[i] = tempData[srcI];\n      }\n      \n      // Green channel - no shift\n      data[i + 1] = tempData[i + 1];\n      \n      // Blue channel - shift right\n      if (x + offset < width) {\n        const srcI = (y * width + (x + offset)) * 4;\n        data[i + 2] = tempData[srcI + 2];\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Vignette\nexport function vignetteFilter(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  const centerX = width / 2;\n  const centerY = height / 2;\n  const maxDist = Math.sqrt(centerX * centerX + centerY * centerY);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      \n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      const vignette = 1 - Math.pow(dist / maxDist, 2);\n      \n      data[i] *= vignette;\n      data[i + 1] *= vignette;\n      data[i + 2] *= vignette;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n","'use client';\n\nimport React, { useCallback, useState } from 'react';\nimport { useDitherStore } from '@/store/useDitherStore';\n\nexport default function UploadArea() {\n  const [isDragging, setIsDragging] = useState(false);\n  const { setOriginalImage, imageDataUrl, reset } = useDitherStore();\n\n  const handleFile = useCallback((file: File) => {\n    if (!file.type.startsWith('image/')) {\n      alert('Please upload an image file');\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const img = new Image();\n      img.onload = () => {\n        setOriginalImage(img, e.target?.result as string);\n      };\n      img.src = e.target?.result as string;\n    };\n    reader.readAsDataURL(file);\n  }, [setOriginalImage]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const file = e.dataTransfer.files[0];\n    if (file) handleFile(file);\n  }, [handleFile]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragging(true);\n  }, []);\n\n  const handleDragLeave = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  const handleFileInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) handleFile(file);\n  }, [handleFile]);\n\n  const handleReplace = useCallback(() => {\n    reset();\n    document.getElementById('file-input')?.click();\n  }, [reset]);\n\n  if (imageDataUrl) {\n    return (\n      <div className=\"mb-6\">\n        <button\n          onClick={handleReplace}\n          className=\"glass-button px-6 py-3 rounded-xl text-white font-medium\n                     transition-all duration-200 hover:scale-105\"\n        >\n          Replace Image\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mb-6\">\n      <div\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        className={`\n          relative border-2 border-dashed rounded-2xl p-12\n          transition-all duration-300\n          ${isDragging \n            ? 'border-glassAccent bg-glassAccent/20 scale-105' \n            : 'border-white/30 bg-white/5 hover:border-white/50'\n          }\n        `}\n      >\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileInput}\n          className=\"hidden\"\n        />\n        \n        <div className=\"flex flex-col items-center justify-center text-center\">\n          <svg \n            className=\"w-16 h-16 mb-4 text-white/70\"\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" \n            />\n          </svg>\n          \n          <h3 className=\"text-xl font-semibold text-white mb-2\">\n            Drop your image here\n          </h3>\n          <p className=\"text-white/60 mb-4\">\n            or click to browse\n          </p>\n          \n          <button\n            onClick={() => document.getElementById('file-input')?.click()}\n            className=\"glass-button px-6 py-3 rounded-xl text-white font-medium\"\n          >\n            Choose File\n          </button>\n          \n          <p className=\"text-sm text-white/40 mt-4\">\n            PNG, JPG, WebP supported\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);\n\nexport { createStore };\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    React.useCallback(() => selector(api.getState()), [api, selector]),\n    React.useCallback(() => selector(api.getInitialState()), [api, selector])\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = ((createState) => createState ? createImpl(createState) : createImpl);\n\nexport { create, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nexport type DitheringAlgorithm = \n  | 'floyd-steinberg' \n  | 'atkinson' \n  | 'bayer' \n  | 'random'\n  | 'jarvis-judice-ninke'\n  | 'stucki'\n  | 'burkes'\n  | 'sierra'\n  | 'sierra-lite'\n  | 'halftone'\n  | 'pattern';\n\nexport type ColorMode = 'grayscale' | 'color';\n\nexport type FilterType = \n  | 'none'\n  // Canvas 2D Filters\n  | 'liquid-metal'\n  | 'mesh-gradient'\n  | 'static-mesh'\n  | 'radial-gradient'\n  | 'grain-gradient'\n  | 'dot-orbit'\n  | 'dot-grid'\n  | 'warp'\n  // WebGL GLSL Shaders\n  | 'raymarching-spheres'\n  | 'mandelbrot'\n  | 'voronoi'\n  | 'plasma'\n  | 'kaleidoscope'\n  | 'rgb-split'\n  | 'glitch'\n  | 'pixel-dither'\n  | 'wave-distortion'\n  | 'tunnel'\n  | 'ripple'\n  | 'oil-painting'\n  | 'mosaic'\n  | 'mosaic-tiles'\n  | 'pixelate'\n  | 'chromatic'\n  | 'heatmap'\n  | 'vignette'\n  | 'swirl'\n  | 'mirror';\n\nexport interface DitherSettings {\n  algorithm: DitheringAlgorithm;\n  colorDepth: number;\n  contrast: number;\n  brightness: number;\n  colorMode: ColorMode;\n  hue: number;\n  saturation: number;\n  filter: FilterType;\n}\n\nexport interface Preset {\n  name: string;\n  settings: DitherSettings;\n  timestamp: number;\n}\n\ninterface DitherStore {\n  // Image state\n  originalImage: HTMLImageElement | null;\n  imageDataUrl: string | null;\n  \n  // Settings\n  settings: DitherSettings;\n  \n  // Processing state\n  isProcessing: boolean;\n  \n  // Presets\n  presets: Preset[];\n  \n  // History\n  history: DitherSettings[];\n  historyIndex: number;\n  \n  // UI State\n  showComparison: boolean;\n  showTutorial: boolean;\n  \n  // Actions\n  setOriginalImage: (image: HTMLImageElement, dataUrl: string) => void;\n  updateSettings: (settings: Partial<DitherSettings>) => void;\n  setIsProcessing: (isProcessing: boolean) => void;\n  reset: () => void;\n  \n  // Preset actions\n  savePreset: (name: string) => void;\n  loadPreset: (preset: Preset) => void;\n  deletePreset: (timestamp: number) => void;\n  \n  // History actions\n  addToHistory: (settings: DitherSettings) => void;\n  undo: () => void;\n  redo: () => void;\n  canUndo: () => boolean;\n  canRedo: () => boolean;\n  \n  // UI actions\n  setShowComparison: (show: boolean) => void;\n  setShowTutorial: (show: boolean) => void;\n}\n\nconst defaultSettings: DitherSettings = {\n  algorithm: 'floyd-steinberg',\n  colorDepth: 2,\n  contrast: 100,\n  brightness: 100,\n  colorMode: 'grayscale',\n  hue: 0,\n  saturation: 100,\n  filter: 'none',\n};\n\nexport const useDitherStore = create<DitherStore>()(\n  persist(\n    (set, get) => ({\n      originalImage: null,\n      imageDataUrl: null,\n      settings: defaultSettings,\n      isProcessing: false,\n      presets: [],\n      history: [defaultSettings],\n      historyIndex: 0,\n      showComparison: false,\n      showTutorial: true,\n      \n      setOriginalImage: (image, dataUrl) => set({ \n        originalImage: image, \n        imageDataUrl: dataUrl \n      }),\n      \n      updateSettings: (newSettings) => {\n        const updatedSettings = { ...get().settings, ...newSettings };\n        set({ settings: updatedSettings });\n        get().addToHistory(updatedSettings);\n      },\n      \n      setIsProcessing: (isProcessing) => set({ isProcessing }),\n      \n      reset: () => set({\n        originalImage: null,\n        imageDataUrl: null,\n        settings: defaultSettings,\n        isProcessing: false,\n        history: [defaultSettings],\n        historyIndex: 0,\n      }),\n      \n      // Preset management\n      savePreset: (name) => {\n        const preset: Preset = {\n          name,\n          settings: get().settings,\n          timestamp: Date.now(),\n        };\n        set({ presets: [...get().presets, preset] });\n      },\n      \n      loadPreset: (preset) => {\n        set({ settings: preset.settings });\n        get().addToHistory(preset.settings);\n      },\n      \n      deletePreset: (timestamp) => {\n        set({ presets: get().presets.filter(p => p.timestamp !== timestamp) });\n      },\n      \n      // History management\n      addToHistory: (settings) => {\n        const { history, historyIndex } = get();\n        const newHistory = history.slice(0, historyIndex + 1);\n        newHistory.push(settings);\n        \n        // Limit history to 50 items\n        if (newHistory.length > 50) {\n          newHistory.shift();\n        }\n        \n        set({\n          history: newHistory,\n          historyIndex: newHistory.length - 1,\n        });\n      },\n      \n      undo: () => {\n        const { historyIndex, history } = get();\n        if (historyIndex > 0) {\n          const newIndex = historyIndex - 1;\n          set({\n            settings: history[newIndex],\n            historyIndex: newIndex,\n          });\n        }\n      },\n      \n      redo: () => {\n        const { historyIndex, history } = get();\n        if (historyIndex < history.length - 1) {\n          const newIndex = historyIndex + 1;\n          set({\n            settings: history[newIndex],\n            historyIndex: newIndex,\n          });\n        }\n      },\n      \n      canUndo: () => get().historyIndex > 0,\n      canRedo: () => get().historyIndex < get().history.length - 1,\n      \n      // UI state\n      setShowComparison: (show) => set({ showComparison: show }),\n      setShowTutorial: (show) => set({ showTutorial: show }),\n    }),\n    {\n      name: 'ditherlab-storage',\n      partialize: (state) => ({\n        presets: state.presets,\n        showTutorial: state.showTutorial,\n      }),\n    }\n  )\n);\n","import React from 'react';\n\ninterface GlassCardProps {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nexport default function GlassCard({ children, className = '', onClick }: GlassCardProps) {\n  return (\n    <div\n      onClick={onClick}\n      className={`\n        rounded-3xl p-6 md:p-8\n        bg-white/10 dark:bg-white/5\n        backdrop-blur-xl\n        shadow-glass\n        border border-white/20\n        transition-all duration-300\n        hover:shadow-glassHover\n        ${className}\n      `}\n    >\n      {children}\n    </div>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { useDitherStore, DitheringAlgorithm, FilterType } from '@/store/useDitherStore';\nimport GlassCard from './GlassCard';\n\nexport default function ControlPanel() {\n  const { settings, updateSettings, imageDataUrl, undo, redo, canUndo, canRedo } = useDitherStore();\n\n  if (!imageDataUrl) return null;\n\n  const algorithms: { value: DitheringAlgorithm; label: string; category: string }[] = [\n    // Error Diffusion Algorithms\n    { value: 'floyd-steinberg', label: 'Floyd–Steinberg', category: 'Error Diffusion' },\n    { value: 'atkinson', label: 'Atkinson', category: 'Error Diffusion' },\n    { value: 'jarvis-judice-ninke', label: 'Jarvis-Judice-Ninke', category: 'Error Diffusion' },\n    { value: 'stucki', label: 'Stucki', category: 'Error Diffusion' },\n    { value: 'burkes', label: 'Burkes', category: 'Error Diffusion' },\n    { value: 'sierra', label: 'Sierra', category: 'Error Diffusion' },\n    { value: 'sierra-lite', label: 'Sierra Lite', category: 'Error Diffusion' },\n    \n    // Ordered Dithering\n    { value: 'bayer', label: 'Bayer Matrix', category: 'Ordered' },\n    { value: 'pattern', label: 'Pattern / Crosshatch', category: 'Ordered' },\n    \n    // Special Effects\n    { value: 'halftone', label: 'Halftone Dots', category: 'Special' },\n    { value: 'random', label: 'Random Noise', category: 'Special' },\n  ];\n\n  const filters: { value: FilterType; label: string; category: string }[] = [\n    { value: 'none', label: 'None (Use Dithering)', category: 'Dithering' },\n    \n    // Canvas 2D Effects\n    { value: 'mesh-gradient', label: 'Mesh Gradient (Canvas)', category: 'Canvas 2D' },\n    { value: 'static-mesh', label: 'Static Mesh', category: 'Canvas 2D' },\n    { value: 'radial-gradient', label: 'Radial Gradient', category: 'Canvas 2D' },\n    { value: 'grain-gradient', label: 'Grain Gradient', category: 'Canvas 2D' },\n    { value: 'liquid-metal', label: 'Liquid Metal', category: 'Canvas 2D' },\n    { value: 'dot-orbit', label: 'Dot Orbit', category: 'Canvas 2D' },\n    { value: 'dot-grid', label: 'Dot Grid', category: 'Canvas 2D' },\n    { value: 'warp', label: 'Warp', category: 'Canvas 2D' },\n    \n    // WebGL - Raytracing\n    { value: 'raymarching-spheres', label: '🔮 Raymarched Spheres', category: 'WebGL - Raytracing' },\n    \n    // WebGL - Fractals & Patterns\n    { value: 'mandelbrot', label: '🌀 Mandelbrot Set', category: 'WebGL - Fractals' },\n    { value: 'voronoi', label: '🔶 Voronoi Cells', category: 'WebGL - Fractals' },\n    { value: 'plasma', label: '⚡ Plasma Waves', category: 'WebGL - Fractals' },\n    \n    // WebGL - Distortion\n    { value: 'tunnel', label: '🌊 Tunnel Effect', category: 'WebGL - Distortion' },\n    { value: 'ripple', label: '💧 Ripple Effect', category: 'WebGL - Distortion' },\n    { value: 'wave-distortion', label: '🌊 Wave Distortion', category: 'WebGL - Distortion' },\n    { value: 'swirl', label: '🌀 Swirl Effect', category: 'WebGL - Distortion' },\n    { value: 'kaleidoscope', label: '🔮 Kaleidoscope', category: 'WebGL - Distortion' },\n    { value: 'mirror', label: '🪞 Mirror Effect', category: 'WebGL - Distortion' },\n    \n    // WebGL - Artistic\n    { value: 'mosaic', label: '🎨 Voronoi Mosaic', category: 'WebGL - Artistic' },\n    { value: 'mosaic-tiles', label: '🧩 Mosaic Tiles', category: 'WebGL - Artistic' },\n    { value: 'oil-painting', label: '🖼️ Oil Painting', category: 'WebGL - Artistic' },\n    { value: 'pixel-dither', label: '🎮 Pixel Dither', category: 'WebGL - Artistic' },\n    \n    // WebGL - Effects\n    { value: 'rgb-split', label: '📺 RGB Split', category: 'WebGL - Effects' },\n    { value: 'glitch', label: '📺 Glitch', category: 'WebGL - Effects' },\n    { value: 'chromatic', label: '🌈 Chromatic Aberration', category: 'WebGL - Effects' },\n    { value: 'heatmap', label: '🔥 Heatmap', category: 'WebGL - Effects' },\n    { value: 'vignette', label: '🎞️ Vignette', category: 'WebGL - Effects' },\n    { value: 'pixelate', label: '🔲 Pixelate', category: 'WebGL - Effects' },\n  ];\n\n  // Group by category\n  const groupedAlgorithms = algorithms.reduce((acc, algo) => {\n    if (!acc[algo.category]) acc[algo.category] = [];\n    acc[algo.category].push(algo);\n    return acc;\n  }, {} as Record<string, typeof algorithms>);\n\n  const groupedFilters = filters.reduce((acc, filter) => {\n    if (!acc[filter.category]) acc[filter.category] = [];\n    acc[filter.category].push(filter);\n    return acc;\n  }, {} as Record<string, typeof filters>);\n\n  const isUsingFilter = settings.filter !== 'none';\n\n  return (\n    <GlassCard className=\"mb-6 animate-slide-up\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-semibold text-white\">Controls</h2>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => undo()}\n            disabled={!canUndo()}\n            className=\"glass-button p-2 rounded-lg text-white disabled:opacity-30 disabled:cursor-not-allowed\"\n            title=\"Undo (Ctrl+Z)\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                    d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" />\n            </svg>\n          </button>\n          <button\n            onClick={() => redo()}\n            disabled={!canRedo()}\n            className=\"glass-button p-2 rounded-lg text-white disabled:opacity-30 disabled:cursor-not-allowed\"\n            title=\"Redo (Ctrl+Shift+Z)\"\n          >\n            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                    d=\"M21 10h-10a8 8 0 00-8 8v2M21 10l-6 6m6-6l-6-6\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"space-y-6\">\n        {/* Mode Toggle */}\n        <div>\n          <label className=\"block text-sm font-medium text-white/80 mb-2\">\n            Processing Mode\n          </label>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <button\n              onClick={() => updateSettings({ filter: 'none' })}\n              className={`px-4 py-3 rounded-xl font-medium transition-all duration-200 ${\n                !isUsingFilter\n                  ? 'bg-glassAccent/60 text-white border-2 border-white/40'\n                  : 'glass-button text-white/70'\n              }`}\n            >\n              Dithering\n            </button>\n            <button\n              onClick={() => updateSettings({ filter: 'heatmap' })}\n              className={`px-4 py-3 rounded-xl font-medium transition-all duration-200 ${\n                isUsingFilter\n                  ? 'bg-glassAccent/60 text-white border-2 border-white/40'\n                  : 'glass-button text-white/70'\n              }`}\n            >\n              Filters/Shaders\n            </button>\n          </div>\n        </div>\n\n        {/* Algorithm/Filter Selector */}\n        {!isUsingFilter ? (\n          <div>\n            <label className=\"block text-sm font-medium text-white/80 mb-2\">\n              Dithering Algorithm\n            </label>\n            <select\n              value={settings.algorithm}\n              onChange={(e) => updateSettings({ algorithm: e.target.value as DitheringAlgorithm })}\n              className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20\n                       text-white backdrop-blur-md\n                       focus:outline-none focus:ring-2 focus:ring-glassAccent\n                       transition-all duration-200\"\n            >\n              {Object.entries(groupedAlgorithms).map(([category, algos]) => (\n                <optgroup key={category} label={category} className=\"bg-gray-800\">\n                  {algos.map((algo) => (\n                    <option key={algo.value} value={algo.value} className=\"bg-gray-900\">\n                      {algo.label}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n            </select>\n          </div>\n        ) : (\n          <div>\n            <label className=\"block text-sm font-medium text-white/80 mb-2\">\n              Filter Effect\n            </label>\n            <select\n              value={settings.filter}\n              onChange={(e) => updateSettings({ filter: e.target.value as FilterType })}\n              className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20\n                       text-white backdrop-blur-md\n                       focus:outline-none focus:ring-2 focus:ring-glassAccent\n                       transition-all duration-200\"\n            >\n              {Object.entries(groupedFilters).map(([category, filts]) => (\n                <optgroup key={category} label={category} className=\"bg-gray-800\">\n                  {filts.map((filter) => (\n                    <option key={filter.value} value={filter.value} className=\"bg-gray-900\">\n                      {filter.label}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* Color Mode Toggle */}\n        {!isUsingFilter && (\n          <div>\n            <label className=\"block text-sm font-medium text-white/80 mb-2\">\n              Color Mode\n            </label>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <button\n                onClick={() => updateSettings({ colorMode: 'grayscale' })}\n                className={`px-4 py-2 rounded-xl font-medium transition-all duration-200 ${\n                  settings.colorMode === 'grayscale'\n                    ? 'bg-white/20 text-white border-2 border-white/40'\n                    : 'glass-button text-white/70'\n                }`}\n              >\n                Grayscale\n              </button>\n              <button\n                onClick={() => updateSettings({ colorMode: 'color' })}\n                className={`px-4 py-2 rounded-xl font-medium transition-all duration-200 ${\n                  settings.colorMode === 'color'\n                    ? 'bg-white/20 text-white border-2 border-white/40'\n                    : 'glass-button text-white/70'\n                }`}\n              >\n                Color\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Color Depth Slider (only for dithering) */}\n        {!isUsingFilter && (\n          <div>\n            <label className=\"block text-sm font-medium text-white/80 mb-2\">\n              Color Depth: {settings.colorDepth} colors\n            </label>\n            <input\n              type=\"range\"\n              min=\"2\"\n              max=\"256\"\n              value={settings.colorDepth}\n              onChange={(e) => updateSettings({ colorDepth: parseInt(e.target.value) })}\n              className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n              style={{\n                background: `linear-gradient(to right, \n                  rgba(138, 180, 248, 0.6) 0%, \n                  rgba(138, 180, 248, 0.6) ${((settings.colorDepth - 2) / 254) * 100}%, \n                  rgba(255, 255, 255, 0.2) ${((settings.colorDepth - 2) / 254) * 100}%, \n                  rgba(255, 255, 255, 0.2) 100%)`\n              }}\n            />\n            <div className=\"flex justify-between text-xs text-white/50 mt-1\">\n              <span>2</span>\n              <span>256</span>\n            </div>\n          </div>\n        )}\n\n        {/* Contrast Slider */}\n        <div>\n          <label className=\"block text-sm font-medium text-white/80 mb-2\">\n            Contrast: {settings.contrast}%\n          </label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"200\"\n            value={settings.contrast}\n            onChange={(e) => updateSettings({ contrast: parseInt(e.target.value) })}\n            className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n            style={{\n              background: `linear-gradient(to right, \n                rgba(138, 180, 248, 0.6) 0%, \n                rgba(138, 180, 248, 0.6) ${(settings.contrast / 200) * 100}%, \n                rgba(255, 255, 255, 0.2) ${(settings.contrast / 200) * 100}%, \n                rgba(255, 255, 255, 0.2) 100%)`\n            }}\n          />\n        </div>\n\n        {/* Brightness Slider */}\n        <div>\n          <label className=\"block text-sm font-medium text-white/80 mb-2\">\n            Brightness: {settings.brightness}%\n          </label>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"200\"\n            value={settings.brightness}\n            onChange={(e) => updateSettings({ brightness: parseInt(e.target.value) })}\n            className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n            style={{\n              background: `linear-gradient(to right, \n                rgba(138, 180, 248, 0.6) 0%, \n                rgba(138, 180, 248, 0.6) ${(settings.brightness / 200) * 100}%, \n                rgba(255, 255, 255, 0.2) ${(settings.brightness / 200) * 100}%, \n                rgba(255, 255, 255, 0.2) 100%)`\n            }}\n          />\n        </div>\n\n        {/* Color controls (only in color mode and not using filters) */}\n        {settings.colorMode === 'color' && !isUsingFilter && (\n          <>\n            <div>\n              <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                Hue: {settings.hue}°\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"360\"\n                value={settings.hue}\n                onChange={(e) => updateSettings({ hue: parseInt(e.target.value) })}\n                className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n                style={{\n                  background: 'linear-gradient(to right, #ff0000, #ffff00, #00ff00, #00ffff, #0000ff, #ff00ff, #ff0000)'\n                }}\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-white/80 mb-2\">\n                Saturation: {settings.saturation}%\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={settings.saturation}\n                onChange={(e) => updateSettings({ saturation: parseInt(e.target.value) })}\n                className=\"w-full h-2 rounded-lg appearance-none cursor-pointer\"\n                style={{\n                  background: `linear-gradient(to right, \n                    rgba(138, 180, 248, 0.6) 0%, \n                    rgba(138, 180, 248, 0.6) ${(settings.saturation / 200) * 100}%, \n                    rgba(255, 255, 255, 0.2) ${(settings.saturation / 200) * 100}%, \n                    rgba(255, 255, 255, 0.2) 100%)`\n                }}\n              />\n            </div>\n          </>\n        )}\n\n        {/* Reset Button */}\n        <button\n          onClick={() => updateSettings({\n            algorithm: 'floyd-steinberg',\n            colorDepth: 2,\n            contrast: 100,\n            brightness: 100,\n            colorMode: 'grayscale',\n            hue: 0,\n            saturation: 100,\n            filter: 'none',\n          })}\n          className=\"w-full glass-button px-6 py-3 rounded-xl text-white font-medium\n                   transition-all duration-200\"\n        >\n          Reset to Defaults\n        </button>\n      </div>\n    </GlassCard>\n  );\n}\n","import { DitherSettings } from '@/store/useDitherStore';\n\n// Utility function to apply brightness and contrast\nfunction applyBrightnessContrast(\n  data: Uint8ClampedArray,\n  brightness: number,\n  contrast: number\n): void {\n  const b = (brightness - 100) * 2.55;\n  const c = (contrast - 100) / 100 + 1;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    // Apply contrast\n    data[i] = c * (data[i] - 128) + 128;\n    data[i + 1] = c * (data[i + 1] - 128) + 128;\n    data[i + 2] = c * (data[i + 2] - 128) + 128;\n    \n    // Apply brightness\n    data[i] += b;\n    data[i + 1] += b;\n    data[i + 2] += b;\n  }\n}\n\n// Convert to grayscale\nfunction toGrayscale(data: Uint8ClampedArray): void {\n  for (let i = 0; i < data.length; i += 4) {\n    const gray = 0.299 * data[i] + 0.587 * data[i + 1] + 0.114 * data[i + 2];\n    data[i] = data[i + 1] = data[i + 2] = gray;\n  }\n}\n\n// Apply hue and saturation adjustments\nfunction applyColorAdjustments(\n  data: Uint8ClampedArray,\n  hue: number,\n  saturation: number\n): void {\n  const hueAdjust = hue / 360;\n  const satAdjust = saturation / 100;\n  \n  for (let i = 0; i < data.length; i += 4) {\n    let r = data[i] / 255;\n    let g = data[i + 1] / 255;\n    let b = data[i + 2] / 255;\n    \n    // Convert RGB to HSL\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h = 0, s = 0, l = (max + min) / 2;\n    \n    if (max !== min) {\n      const d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      \n      switch (max) {\n        case r: h = ((g - b) / d + (g < b ? 6 : 0)) / 6; break;\n        case g: h = ((b - r) / d + 2) / 6; break;\n        case b: h = ((r - g) / d + 4) / 6; break;\n      }\n    }\n    \n    // Apply adjustments\n    h = (h + hueAdjust) % 1;\n    s = Math.max(0, Math.min(1, s * satAdjust));\n    \n    // Convert back to RGB\n    const hue2rgb = (p: number, q: number, t: number) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1/6) return p + (q - p) * 6 * t;\n      if (t < 1/2) return q;\n      if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n      return p;\n    };\n    \n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      const p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1/3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1/3);\n    }\n    \n    data[i] = Math.round(r * 255);\n    data[i + 1] = Math.round(g * 255);\n    data[i + 2] = Math.round(b * 255);\n  }\n}\n\n// Quantize color to nearest level\nfunction quantizeColor(value: number, levels: number): number {\n  const step = 255 / (levels - 1);\n  return Math.round(Math.round(value / step) * step);\n}\n\n// Floyd-Steinberg dithering\nexport function floydSteinberg(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  // Apply brightness and contrast\n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  \n  // Apply color adjustments if in color mode\n  if (settings.colorMode === 'color') {\n    applyColorAdjustments(data, settings.hue, settings.saturation);\n  }\n  \n  // Convert to grayscale if needed\n  if (settings.colorMode === 'grayscale') {\n    toGrayscale(data);\n  }\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      // Distribute error to neighboring pixels\n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      distributeError(1, 0, 7 / 16);\n      distributeError(-1, 1, 3 / 16);\n      distributeError(0, 1, 5 / 16);\n      distributeError(1, 1, 1 / 16);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Atkinson dithering\nexport function atkinson(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error / 8;\n          data[j + 1] += error / 8;\n          data[j + 2] += error / 8;\n        }\n      };\n      \n      distributeError(1, 0);\n      distributeError(2, 0);\n      distributeError(-1, 1);\n      distributeError(0, 1);\n      distributeError(1, 1);\n      distributeError(0, 2);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Bayer 8x8 ordered dithering\nexport function bayerDithering(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const bayerMatrix = [\n    [0, 32, 8, 40, 2, 34, 10, 42],\n    [48, 16, 56, 24, 50, 18, 58, 26],\n    [12, 44, 4, 36, 14, 46, 6, 38],\n    [60, 28, 52, 20, 62, 30, 54, 22],\n    [3, 35, 11, 43, 1, 33, 9, 41],\n    [51, 19, 59, 27, 49, 17, 57, 25],\n    [15, 47, 7, 39, 13, 45, 5, 37],\n    [63, 31, 55, 23, 61, 29, 53, 21],\n  ];\n  \n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      \n      const threshold = (bayerMatrix[y % 8][x % 8] / 64) * 255;\n      const adjustment = (threshold - 127.5) / (settings.colorDepth - 1);\n      \n      const newPixel = quantizeColor(oldPixel + adjustment, settings.colorDepth);\n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Random noise dithering\nexport function randomDithering(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      \n      // Add random noise\n      const noise = (Math.random() - 0.5) * 50;\n      const newPixel = quantizeColor(oldPixel + noise, settings.colorDepth);\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Jarvis-Judice-Ninke dithering (more distributed error diffusion)\nexport function jarvisJudiceNinke(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      // JJN kernel distributes error over 12 pixels\n      distributeError(1, 0, 7 / 48);\n      distributeError(2, 0, 5 / 48);\n      distributeError(-2, 1, 3 / 48);\n      distributeError(-1, 1, 5 / 48);\n      distributeError(0, 1, 7 / 48);\n      distributeError(1, 1, 5 / 48);\n      distributeError(2, 1, 3 / 48);\n      distributeError(-2, 2, 1 / 48);\n      distributeError(-1, 2, 3 / 48);\n      distributeError(0, 2, 5 / 48);\n      distributeError(1, 2, 3 / 48);\n      distributeError(2, 2, 1 / 48);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Stucki dithering (another error diffusion variant)\nexport function stucki(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      // Stucki kernel\n      distributeError(1, 0, 8 / 42);\n      distributeError(2, 0, 4 / 42);\n      distributeError(-2, 1, 2 / 42);\n      distributeError(-1, 1, 4 / 42);\n      distributeError(0, 1, 8 / 42);\n      distributeError(1, 1, 4 / 42);\n      distributeError(2, 1, 2 / 42);\n      distributeError(-2, 2, 1 / 42);\n      distributeError(-1, 2, 2 / 42);\n      distributeError(0, 2, 4 / 42);\n      distributeError(1, 2, 2 / 42);\n      distributeError(2, 2, 1 / 42);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Burkes dithering\nexport function burkes(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      // Burkes kernel\n      distributeError(1, 0, 8 / 32);\n      distributeError(2, 0, 4 / 32);\n      distributeError(-2, 1, 2 / 32);\n      distributeError(-1, 1, 4 / 32);\n      distributeError(0, 1, 8 / 32);\n      distributeError(1, 1, 4 / 32);\n      distributeError(2, 1, 2 / 32);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Sierra dithering\nexport function sierra(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      // Sierra kernel\n      distributeError(1, 0, 5 / 32);\n      distributeError(2, 0, 3 / 32);\n      distributeError(-2, 1, 2 / 32);\n      distributeError(-1, 1, 4 / 32);\n      distributeError(0, 1, 5 / 32);\n      distributeError(1, 1, 4 / 32);\n      distributeError(2, 1, 2 / 32);\n      distributeError(-1, 2, 2 / 32);\n      distributeError(0, 2, 3 / 32);\n      distributeError(1, 2, 2 / 32);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Two-Row Sierra (Sierra Lite)\nexport function sierraLite(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      const newPixel = quantizeColor(oldPixel, settings.colorDepth);\n      const error = oldPixel - newPixel;\n      \n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n      \n      const distributeError = (dx: number, dy: number, factor: number) => {\n        const nx = x + dx;\n        const ny = y + dy;\n        if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n          const j = (ny * width + nx) * 4;\n          data[j] += error * factor;\n          data[j + 1] += error * factor;\n          data[j + 2] += error * factor;\n        }\n      };\n      \n      // Sierra Lite kernel (faster, 2 rows)\n      distributeError(1, 0, 2 / 4);\n      distributeError(-1, 1, 1 / 4);\n      distributeError(0, 1, 1 / 4);\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Halftone / Dot pattern dithering\nexport function halftone(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  const dotSize = 4; // Size of halftone dots\n  \n  for (let y = 0; y < height; y += dotSize) {\n    for (let x = 0; x < width; x += dotSize) {\n      // Calculate average brightness of block\n      let sum = 0;\n      let count = 0;\n      \n      for (let dy = 0; dy < dotSize && y + dy < height; dy++) {\n        for (let dx = 0; dx < dotSize && x + dx < width; dx++) {\n          const i = ((y + dy) * width + (x + dx)) * 4;\n          sum += data[i];\n          count++;\n        }\n      }\n      \n      const avg = sum / count;\n      const radius = ((255 - avg) / 255) * (dotSize / 2);\n      \n      // Draw dot in block\n      for (let dy = 0; dy < dotSize && y + dy < height; dy++) {\n        for (let dx = 0; dx < dotSize && x + dx < width; dx++) {\n          const i = ((y + dy) * width + (x + dx)) * 4;\n          const centerX = dotSize / 2;\n          const centerY = dotSize / 2;\n          const dist = Math.sqrt((dx - centerX) ** 2 + (dy - centerY) ** 2);\n          \n          const value = dist < radius ? 0 : 255;\n          data[i] = data[i + 1] = data[i + 2] = value;\n        }\n      }\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Pattern dithering (crosshatch style)\nexport function patternDither(\n  ctx: CanvasRenderingContext2D,\n  settings: DitherSettings\n): void {\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  const data = imageData.data;\n  const width = imageData.width;\n  const height = imageData.height;\n  \n  applyBrightnessContrast(data, settings.brightness, settings.contrast);\n  toGrayscale(data);\n  \n  // 4x4 patterns for different brightness levels\n  const patterns = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Black\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n    [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1],\n    [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0],\n    [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0],\n    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0],\n    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\n    [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1],\n    [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1],\n    [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1],\n    [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], // White\n  ];\n  \n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const i = (y * width + x) * 4;\n      const oldPixel = data[i];\n      \n      // Map brightness to pattern index\n      const patternIndex = Math.floor((oldPixel / 255) * (patterns.length - 1));\n      const pattern = patterns[patternIndex];\n      \n      const patternX = x % 4;\n      const patternY = y % 4;\n      const patternValue = pattern[patternY * 4 + patternX];\n      \n      const newPixel = patternValue * 255;\n      data[i] = data[i + 1] = data[i + 2] = newPixel;\n    }\n  }\n  \n  ctx.putImageData(imageData, 0, 0);\n}\n\n// Main dithering function\nexport function applyDithering(\n  canvas: HTMLCanvasElement,\n  image: HTMLImageElement,\n  settings: DitherSettings\n): void {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  \n  // Set canvas size to match image\n  canvas.width = image.width;\n  canvas.height = image.height;\n  \n  // Draw original image\n  ctx.drawImage(image, 0, 0);\n  \n  // Check if it's a WebGL shader\n  const webglShaders = [\n    'raymarching-spheres', 'mandelbrot', 'voronoi', 'plasma', 'kaleidoscope',\n    'rgb-split', 'glitch', 'pixel-dither', 'wave-distortion', 'tunnel',\n    'ripple', 'oil-painting', 'mosaic', 'mosaic-tiles', 'pixelate',\n    'chromatic', 'heatmap', 'vignette', 'swirl', 'mirror'\n  ];\n  \n  if (webglShaders.includes(settings.filter)) {\n    // Will be handled by DitherCanvas component with WebGL\n    return;\n  }\n  \n  // Apply Canvas 2D filter if selected (and not 'none')\n  if (settings.filter !== 'none') {\n    const { applyFilter } = require('./filters');\n    applyFilter(ctx, settings);\n  } else {\n    // Apply dithering algorithm\n    switch (settings.algorithm) {\n      case 'floyd-steinberg':\n        floydSteinberg(ctx, settings);\n        break;\n      case 'atkinson':\n        atkinson(ctx, settings);\n        break;\n      case 'bayer':\n        bayerDithering(ctx, settings);\n        break;\n      case 'random':\n        randomDithering(ctx, settings);\n        break;\n      case 'jarvis-judice-ninke':\n        jarvisJudiceNinke(ctx, settings);\n        break;\n      case 'stucki':\n        stucki(ctx, settings);\n        break;\n      case 'burkes':\n        burkes(ctx, settings);\n        break;\n      case 'sierra':\n        sierra(ctx, settings);\n        break;\n      case 'sierra-lite':\n        sierraLite(ctx, settings);\n        break;\n      case 'halftone':\n        halftone(ctx, settings);\n        break;\n      case 'pattern':\n        patternDither(ctx, settings);\n        break;\n    }\n  }\n}\n","// WebGL shader utility class\nexport class ShaderProgram {\n  gl: WebGLRenderingContext;\n  program: WebGLProgram | null = null;\n  canvas: HTMLCanvasElement;\n  private animationId: number | null = null;\n  private startTime: number = Date.now();\n  private texture: WebGLTexture | null = null;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    const gl = canvas.getContext('webgl', { \n      premultipliedAlpha: false,\n      preserveDrawingBuffer: true \n    }) || canvas.getContext('experimental-webgl', {\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: true\n    });\n    \n    if (!gl) {\n      throw new Error('WebGL not supported');\n    }\n    this.gl = gl as WebGLRenderingContext;\n  }\n\n  compileShader(source: string, type: number): WebGLShader | null {\n    const shader = this.gl.createShader(type);\n    if (!shader) return null;\n    \n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      console.error('Shader compilation failed:', this.gl.getShaderInfoLog(shader));\n      this.gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  createProgram(vertexSource: string, fragmentSource: string): boolean {\n    const vertexShader = this.compileShader(vertexSource, this.gl.VERTEX_SHADER);\n    const fragmentShader = this.compileShader(fragmentSource, this.gl.FRAGMENT_SHADER);\n\n    if (!vertexShader || !fragmentShader) {\n      return false;\n    }\n\n    this.program = this.gl.createProgram();\n    if (!this.program) return false;\n\n    this.gl.attachShader(this.program, vertexShader);\n    this.gl.attachShader(this.program, fragmentShader);\n    this.gl.linkProgram(this.program);\n\n    if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n      console.error('Program linking failed:', this.gl.getProgramInfoLog(this.program));\n      return false;\n    }\n\n    this.gl.useProgram(this.program);\n    \n    // Clean up shaders after linking\n    this.gl.deleteShader(vertexShader);\n    this.gl.deleteShader(fragmentShader);\n    \n    return true;\n  }\n\n  setTexture(image: HTMLImageElement): void {\n    if (this.texture) {\n      this.gl.deleteTexture(this.texture);\n    }\n    \n    this.texture = this.gl.createTexture();\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    \n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    \n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, image);\n    \n    // Set texture uniform\n    if (this.program) {\n      const texLocation = this.gl.getUniformLocation(this.program, 'u_texture');\n      this.gl.uniform1i(texLocation, 0);\n    }\n  }\n\n  setupGeometry(): void {\n    const positions = new Float32Array([\n      -1, -1,\n       1, -1,\n      -1,  1,\n       1,  1,\n    ]);\n\n    const texCoords = new Float32Array([\n      0, 1,\n      1, 1,\n      0, 0,\n      1, 0,\n    ]);\n\n    const positionBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, positionBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, positions, this.gl.STATIC_DRAW);\n\n    const positionLocation = this.gl.getAttribLocation(this.program!, 'a_position');\n    this.gl.enableVertexAttribArray(positionLocation);\n    this.gl.vertexAttribPointer(positionLocation, 2, this.gl.FLOAT, false, 0, 0);\n\n    const texCoordBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, texCoordBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, texCoords, this.gl.STATIC_DRAW);\n\n    const texCoordLocation = this.gl.getAttribLocation(this.program!, 'a_texCoord');\n    this.gl.enableVertexAttribArray(texCoordLocation);\n    this.gl.vertexAttribPointer(texCoordLocation, 2, this.gl.FLOAT, false, 0, 0);\n  }\n\n  setUniform(name: string, value: number | number[]): void {\n    if (!this.program) return;\n    \n    const location = this.gl.getUniformLocation(this.program, name);\n    if (location === null) return;\n\n    if (typeof value === 'number') {\n      this.gl.uniform1f(location, value);\n    } else if (value.length === 2) {\n      this.gl.uniform2f(location, value[0], value[1]);\n    } else if (value.length === 3) {\n      this.gl.uniform3f(location, value[0], value[1], value[2]);\n    } else if (value.length === 4) {\n      this.gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n    }\n  }\n\n  render(uniforms: Record<string, number | number[]> = {}): void {\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.gl.clearColor(0, 0, 0, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    Object.entries(uniforms).forEach(([name, value]) => {\n      this.setUniform(name, value);\n    });\n\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  animate(uniforms: () => Record<string, number | number[]>): void {\n    const frame = () => {\n      const time = (Date.now() - this.startTime) / 1000;\n      this.render({ u_time: time, ...uniforms() });\n      this.animationId = requestAnimationFrame(frame);\n    };\n    frame();\n  }\n\n  stopAnimation(): void {\n    if (this.animationId !== null) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n\n  destroy(): void {\n    this.stopAnimation();\n    if (this.texture) {\n      this.gl.deleteTexture(this.texture);\n      this.texture = null;\n    }\n    if (this.program) {\n      this.gl.deleteProgram(this.program);\n      this.program = null;\n    }\n  }\n}\n\n// Common vertex shader for all effects\nexport const vertexShader = `\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n  v_texCoord = a_texCoord;\n}\n`;\n","// Advanced GLSL Fragment Shaders\n\n// Plasma Effect - Works reliably\nexport const plasmaEffect = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n  \n  float v = 0.0;\n  v += sin(p.x * 10.0 + u_time);\n  v += sin(p.y * 10.0 + u_time);\n  v += sin((p.x + p.y) * 10.0 + u_time);\n  v += sin(length(p) * 10.0 + u_time);\n  \n  vec3 col = vec3(\n    0.5 + 0.5 * sin(v + u_time),\n    0.5 + 0.5 * sin(v + u_time + 2.094),\n    0.5 + 0.5 * sin(v + u_time + 4.188)\n  );\n  \n  vec3 texCol = texture2D(u_texture, uv).rgb;\n  float brightness = dot(texCol, vec3(0.299, 0.587, 0.114));\n  \n  col *= brightness * 1.5;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Ripple Effect\nexport const rippleEffect = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 center = vec2(0.5);\n  \n  float dist = length(uv - center);\n  float ripple = sin(dist * 30.0 - u_time * 3.0) * 0.02 / (dist + 0.5);\n  \n  vec2 dir = normalize(uv - center);\n  uv += dir * ripple;\n  \n  vec3 col = texture2D(u_texture, uv).rgb;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Wave Distortion\nexport const waveDistortion = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  \n  float wave1 = sin(uv.y * 10.0 + u_time * 2.0) * 0.05;\n  float wave2 = cos(uv.x * 8.0 + u_time * 1.5) * 0.03;\n  \n  uv.x += wave1;\n  uv.y += wave2;\n  \n  vec3 col = texture2D(u_texture, uv).rgb;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Kaleidoscope\nexport const kaleidoscope = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\n#define PI 3.14159265359\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n  \n  float a = atan(p.y, p.x);\n  float r = length(p);\n  \n  float segments = 8.0;\n  a = mod(a, PI * 2.0 / segments);\n  a = abs(a - PI / segments);\n  \n  p = vec2(cos(a), sin(a)) * r;\n  \n  vec2 newUv = p * 0.5 + 0.5;\n  newUv = fract(newUv);\n  \n  vec3 col = texture2D(u_texture, newUv).rgb;\n  col *= 1.0 - r * 0.3;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// RGB Split\nexport const rgbSplitShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 center = vec2(0.5);\n  vec2 dir = uv - center;\n  float dist = length(dir);\n  \n  float offset = sin(u_time * 2.0) * 0.015 * dist;\n  \n  float r = texture2D(u_texture, uv - dir * offset).r;\n  float g = texture2D(u_texture, uv).g;\n  float b = texture2D(u_texture, uv + dir * offset).b;\n  \n  gl_FragColor = vec4(r, g, b, 1.0);\n}\n`;\n\n// Tunnel Effect\nexport const tunnelEffect = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\n#define PI 3.14159265359\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n  \n  float a = atan(p.y, p.x) / PI;\n  float r = length(p);\n  \n  vec2 tuv = vec2(\n    a * 0.5 + 0.5,\n    0.5 / r + u_time * 0.2\n  );\n  \n  tuv = fract(tuv);\n  \n  vec3 col = texture2D(u_texture, tuv).rgb;\n  col *= (1.0 - r * 0.4);\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Voronoi Pattern\nexport const voronoiPattern = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\n#define PI 3.14159265359\n\nvec2 random2(vec2 st) {\n  st = vec2(dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)));\n  return fract(sin(st) * 43758.5453123);\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 st = uv * 12.0;\n  \n  vec2 i_st = floor(st);\n  vec2 f_st = fract(st);\n  \n  float minDist = 1.0;\n  vec2 minPoint;\n  \n  for(int y = -1; y <= 1; y++) {\n    for(int x = -1; x <= 1; x++) {\n      vec2 neighbor = vec2(float(x), float(y));\n      vec2 point = random2(i_st + neighbor);\n      point = 0.5 + 0.5 * sin(u_time + 6.2831 * point);\n      \n      float dist = length(neighbor + point - f_st);\n      if(dist < minDist) {\n        minDist = dist;\n        minPoint = point;\n      }\n    }\n  }\n  \n  vec3 texCol = texture2D(u_texture, uv).rgb;\n  float brightness = dot(texCol, vec3(0.299, 0.587, 0.114));\n  \n  vec3 col = mix(\n    vec3(0.3, 0.5, 0.9),\n    vec3(0.9, 0.5, 0.3),\n    minPoint.x\n  );\n  \n  col *= 1.0 - 0.4 * minDist;\n  col = mix(col, texCol, 0.4);\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Mandelbrot Fractal\nexport const mandelbrotFractal = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvec3 palette(float t) {\n  vec3 a = vec3(0.5, 0.5, 0.5);\n  vec3 b = vec3(0.5, 0.5, 0.5);\n  vec3 c = vec3(1.0, 1.0, 1.0);\n  vec3 d = vec3(0.0, 0.33, 0.67);\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 c = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n  \n  float zoom = 0.5 + sin(u_time * 0.3) * 0.3;\n  c = c * zoom + vec2(-0.5, 0.0);\n  \n  vec2 z = vec2(0.0);\n  float iter = 0.0;\n  \n  for(int i = 0; i < 100; i++) {\n    z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n    if(length(z) > 2.0) break;\n    iter += 1.0;\n  }\n  \n  float col = iter / 100.0;\n  vec3 fractalCol = palette(col + u_time * 0.1);\n  \n  vec3 texCol = texture2D(u_texture, uv).rgb;\n  float brightness = dot(texCol, vec3(0.299, 0.587, 0.114));\n  \n  vec3 finalCol = mix(texCol * 0.5, fractalCol, brightness * 0.8);\n  \n  gl_FragColor = vec4(finalCol, 1.0);\n}\n`;\n\n// Raymarching Spheres\nexport const raymarchingSpheres = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\n#define MAX_STEPS 64\n#define MAX_DIST 10.0\n#define SURF_DIST 0.01\n\nfloat sdSphere(vec3 p, float r) {\n  return length(p) - r;\n}\n\nfloat map(vec3 p) {\n  float d = MAX_DIST;\n  \n  for(int i = 0; i < 4; i++) {\n    float fi = float(i);\n    vec3 offset = vec3(\n      sin(u_time + fi * 2.0) * 1.5,\n      cos(u_time * 0.5 + fi) * 1.5,\n      sin(u_time * 0.3 + fi * 1.5) * 1.5 - 3.0\n    );\n    d = min(d, sdSphere(p - offset, 0.4 + sin(u_time + fi) * 0.15));\n  }\n  \n  return d;\n}\n\nvec3 getNormal(vec3 p) {\n  float d = map(p);\n  vec2 e = vec2(0.01, 0.0);\n  vec3 n = d - vec3(\n    map(p - e.xyy),\n    map(p - e.yxy),\n    map(p - e.yyx)\n  );\n  return normalize(n);\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 p = (gl_FragCoord.xy * 2.0 - u_resolution) / min(u_resolution.x, u_resolution.y);\n  \n  vec3 ro = vec3(0.0, 0.0, 3.0);\n  vec3 rd = normalize(vec3(p, -1.0));\n  \n  vec3 texCol = texture2D(u_texture, uv).rgb;\n  vec3 col = texCol * 0.3;\n  \n  float t = 0.0;\n  \n  for(int i = 0; i < MAX_STEPS; i++) {\n    vec3 pos = ro + rd * t;\n    float d = map(pos);\n    \n    if(d < SURF_DIST) {\n      vec3 normal = getNormal(pos);\n      vec3 lightDir = normalize(vec3(1.0, 1.0, 2.0));\n      float diff = max(dot(normal, lightDir), 0.0);\n      \n      vec3 sphereCol = vec3(0.3, 0.6, 1.0);\n      col = mix(col, sphereCol * (diff + 0.2), 0.8);\n      break;\n    }\n    \n    t += d;\n    if(t > MAX_DIST) break;\n  }\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Mosaic/Stained Glass\nexport const mosaicShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvec2 random2(vec2 st) {\n  st = vec2(dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)));\n  return fract(sin(st) * 43758.5453123);\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 st = uv * 20.0;\n  \n  vec2 i_st = floor(st);\n  vec2 f_st = fract(st);\n  \n  vec2 point = random2(i_st);\n  vec2 cellUv = (i_st + point) / 20.0;\n  \n  vec3 col = texture2D(u_texture, cellUv).rgb;\n  \n  float dist = length(f_st - point);\n  float edge = smoothstep(0.4, 0.45, dist);\n  col = mix(col, vec3(0.1), edge * 0.6);\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Oil Painting Effect\nexport const oilPaintingShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 texelSize = 1.0 / u_resolution;\n  \n  vec3 col = vec3(0.0);\n  float totalWeight = 0.0;\n  \n  for(int x = -2; x <= 2; x++) {\n    for(int y = -2; y <= 2; y++) {\n      vec2 offset = vec2(float(x), float(y)) * texelSize * 2.0;\n      vec3 sample = texture2D(u_texture, uv + offset).rgb;\n      \n      float weight = 1.0 - length(offset) / (4.0 * length(texelSize));\n      weight = max(weight, 0.1);\n      \n      col += sample * weight;\n      totalWeight += weight;\n    }\n  }\n  \n  col /= totalWeight;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Pixel Dither with Bayer\nexport const pixelDitherShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nfloat bayer2(vec2 a) {\n  a = floor(a);\n  return fract(dot(a, vec2(0.5, a.y * 0.75)));\n}\n\n#define bayer4(a) (bayer2(0.5 * (a)) * 0.25 + bayer2(a))\n#define bayer8(a) (bayer4(0.5 * (a)) * 0.25 + bayer2(a))\n\nvoid main() {\n  float pixelSize = 6.0 + sin(u_time * 0.5) * 3.0;\n  vec2 pixelUv = floor(v_texCoord * u_resolution / pixelSize) * pixelSize / u_resolution;\n  \n  vec3 col = texture2D(u_texture, pixelUv).rgb;\n  float gray = dot(col, vec3(0.299, 0.587, 0.114));\n  \n  float dither = bayer8(gl_FragCoord.xy);\n  float threshold = gray + (dither - 0.5) * 0.3;\n  \n  col = vec3(step(0.5, threshold));\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Glitch Effect\nexport const glitchShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nfloat random(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  \n  float glitchStrength = step(0.96, random(vec2(u_time * 2.0, floor(uv.y * 30.0))));\n  \n  if(glitchStrength > 0.0) {\n    float offset = (random(vec2(u_time, floor(uv.y * 30.0))) - 0.5) * 0.15;\n    uv.x += offset;\n  }\n  \n  float r = texture2D(u_texture, uv + vec2(0.01, 0.0) * glitchStrength).r;\n  float g = texture2D(u_texture, uv).g;\n  float b = texture2D(u_texture, uv - vec2(0.01, 0.0) * glitchStrength).b;\n  \n  vec3 col = vec3(r, g, b);\n  \n  if(glitchStrength > 0.0) {\n    float scanline = sin(uv.y * 500.0) * 0.05;\n    col += scanline;\n  }\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Mosaic Tiles\nexport const mosaicTiles = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  float tileSize = 20.0;\n  vec2 tileUv = floor(v_texCoord * u_resolution / tileSize) * tileSize / u_resolution;\n  tileUv += vec2(tileSize / 2.0) / u_resolution;\n  \n  vec3 col = texture2D(u_texture, tileUv).rgb;\n  \n  vec2 localUv = fract(v_texCoord * u_resolution / tileSize);\n  vec2 center = vec2(0.5);\n  float dist = length(localUv - center);\n  \n  float border = smoothstep(0.45, 0.5, dist);\n  col = mix(col, col * 0.5, border);\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Pixelate Effect\nexport const pixelateShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  float pixelSize = 8.0;\n  vec2 pixelUv = floor(v_texCoord * u_resolution / pixelSize) * pixelSize / u_resolution;\n  \n  vec3 col = texture2D(u_texture, pixelUv).rgb;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Chromatic Aberration\nexport const chromaticShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 offset = vec2(0.005, 0.0);\n  \n  float r = texture2D(u_texture, uv - offset).r;\n  float g = texture2D(u_texture, uv).g;\n  float b = texture2D(u_texture, uv + offset).b;\n  \n  gl_FragColor = vec4(r, g, b, 1.0);\n}\n`;\n\n// Heatmap\nexport const heatmapShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvec3 heatmap(float t) {\n  vec3 a = vec3(0.0, 0.0, 1.0);\n  vec3 b = vec3(0.0, 1.0, 1.0);\n  vec3 c = vec3(0.0, 1.0, 0.0);\n  vec3 d = vec3(1.0, 1.0, 0.0);\n  vec3 e = vec3(1.0, 0.0, 0.0);\n  \n  if(t < 0.25) return mix(a, b, t * 4.0);\n  else if(t < 0.5) return mix(b, c, (t - 0.25) * 4.0);\n  else if(t < 0.75) return mix(c, d, (t - 0.5) * 4.0);\n  else return mix(d, e, (t - 0.75) * 4.0);\n}\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec3 texCol = texture2D(u_texture, uv).rgb;\n  float gray = dot(texCol, vec3(0.299, 0.587, 0.114));\n  \n  vec3 col = heatmap(gray);\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Vignette\nexport const vignetteShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec3 col = texture2D(u_texture, uv).rgb;\n  \n  vec2 center = vec2(0.5);\n  float dist = length(uv - center);\n  float vignette = 1.0 - smoothstep(0.3, 0.8, dist);\n  \n  col *= vignette;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Swirl Effect\nexport const swirlShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  vec2 center = vec2(0.5);\n  vec2 tc = uv - center;\n  \n  float dist = length(tc);\n  float angle = atan(tc.y, tc.x);\n  \n  angle += (1.0 - dist) * 3.0 * sin(u_time);\n  \n  vec2 newUv = center + dist * vec2(cos(angle), sin(angle));\n  \n  vec3 col = texture2D(u_texture, newUv).rgb;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\n// Mirror Effect\nexport const mirrorShader = `\nprecision mediump float;\nuniform vec2 u_resolution;\nuniform float u_time;\nuniform sampler2D u_texture;\nvarying vec2 v_texCoord;\n\nvoid main() {\n  vec2 uv = v_texCoord;\n  \n  uv.x = abs(uv.x - 0.5) + 0.5;\n  uv.y = abs(uv.y - 0.5) + 0.5;\n  \n  uv = fract(uv);\n  \n  vec3 col = texture2D(u_texture, uv).rgb;\n  \n  gl_FragColor = vec4(col, 1.0);\n}\n`;\n\nexport const shaderList = {\n  'plasma': plasmaEffect,\n  'ripple': rippleEffect,\n  'wave-distortion': waveDistortion,\n  'kaleidoscope': kaleidoscope,\n  'rgb-split': rgbSplitShader,\n  'tunnel': tunnelEffect,\n  'voronoi': voronoiPattern,\n  'mandelbrot': mandelbrotFractal,\n  'raymarching-spheres': raymarchingSpheres,\n  'mosaic': mosaicShader,\n  'oil-painting': oilPaintingShader,\n  'pixel-dither': pixelDitherShader,\n  'glitch': glitchShader,\n  'mosaic-tiles': mosaicTiles,\n  'pixelate': pixelateShader,\n  'chromatic': chromaticShader,\n  'heatmap': heatmapShader,\n  'vignette': vignetteShader,\n  'swirl': swirlShader,\n  'mirror': mirrorShader,\n};\n","import { ShaderProgram, vertexShader } from './ShaderProgram';\nimport { shaderList } from './glslShaders';\nimport { DitherSettings } from '@/store/useDitherStore';\n\nexport function applyWebGLShader(\n  canvas: HTMLCanvasElement,\n  image: HTMLImageElement,\n  shaderName: keyof typeof shaderList,\n  settings: DitherSettings\n): ShaderProgram | null {\n  try {\n    // Set canvas size to match image\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    // Create shader program\n    const shader = new ShaderProgram(canvas);\n    const fragmentShader = shaderList[shaderName];\n\n    if (!shader.createProgram(vertexShader, fragmentShader)) {\n      console.error('Failed to create shader program');\n      return null;\n    }\n\n    shader.setTexture(image);\n    shader.setupGeometry();\n\n    // Set uniforms\n    const uniforms = {\n      u_resolution: [canvas.width, canvas.height],\n      u_time: 0,\n      u_brightness: settings.brightness / 100,\n      u_contrast: settings.contrast / 100,\n    };\n\n    shader.render(uniforms);\n    return shader;\n  } catch (error) {\n    console.error('WebGL shader error:', error);\n    return null;\n  }\n}\n\nexport function animateWebGLShader(\n  canvas: HTMLCanvasElement,\n  image: HTMLImageElement,\n  shaderName: keyof typeof shaderList,\n  settings: DitherSettings\n): ShaderProgram | null {\n  try {\n    // Set canvas size to match image\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    // Create shader program\n    const shader = new ShaderProgram(canvas);\n    const fragmentShader = shaderList[shaderName];\n\n    if (!shader.createProgram(vertexShader, fragmentShader)) {\n      console.error('Failed to create shader program');\n      return null;\n    }\n\n    shader.setTexture(image);\n    shader.setupGeometry();\n\n    // Animate with smooth 60fps\n    shader.animate(() => ({\n      u_resolution: [canvas.width, canvas.height],\n      u_brightness: settings.brightness / 100,\n      u_contrast: settings.contrast / 100,\n    }));\n\n    return shader;\n  } catch (error) {\n    console.error('WebGL animation error:', error);\n    return null;\n  }\n}\n\n// List of shaders that need animation\nexport const animatedShaders = new Set([\n  'raymarching-spheres',\n  'mandelbrot',\n  'voronoi',\n  'plasma',\n  'rgb-split',\n  'glitch',\n  'pixel-dither',\n  'wave-distortion',\n  'tunnel',\n  'ripple',\n  'swirl',\n]);\n\nexport function isAnimatedShader(shaderName: string): boolean {\n  return animatedShaders.has(shaderName);\n}\n","'use client';\n\nimport React, { useState, useRef } from 'react';\n\ninterface ComparisonSliderProps {\n  originalSrc: string;\n  ditheredCanvas: HTMLCanvasElement | null;\n}\n\nexport default function ComparisonSlider({ originalSrc, ditheredCanvas }: ComparisonSliderProps) {\n  const [sliderPosition, setSliderPosition] = useState(50);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const handleMouseDown = () => setIsDragging(true);\n  \n  const handleMouseUp = () => setIsDragging(false);\n  \n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging || !containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percentage = (x / rect.width) * 100;\n    setSliderPosition(Math.max(0, Math.min(100, percentage)));\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    if (!containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.touches[0].clientX - rect.left;\n    const percentage = (x / rect.width) * 100;\n    setSliderPosition(Math.max(0, Math.min(100, percentage)));\n  };\n\n  if (!ditheredCanvas) return null;\n\n  const ditheredSrc = ditheredCanvas.toDataURL();\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"relative w-full aspect-auto overflow-hidden rounded-xl cursor-col-resize select-none\"\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseUp}\n      onTouchMove={handleTouchMove}\n    >\n      {/* Dithered image (background) */}\n      <img \n        src={ditheredSrc}\n        alt=\"Dithered\"\n        className=\"w-full h-full object-contain\"\n        draggable={false}\n      />\n      \n      {/* Original image (clipped) */}\n      <div \n        className=\"absolute top-0 left-0 w-full h-full overflow-hidden\"\n        style={{ clipPath: `inset(0 ${100 - sliderPosition}% 0 0)` }}\n      >\n        <img \n          src={originalSrc}\n          alt=\"Original\"\n          className=\"w-full h-full object-contain\"\n          draggable={false}\n        />\n      </div>\n      \n      {/* Slider handle */}\n      <div\n        className=\"absolute top-0 bottom-0 w-1 bg-white/80 shadow-lg\"\n        style={{ left: `${sliderPosition}%` }}\n      >\n        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\n                      w-10 h-10 bg-white rounded-full shadow-xl\n                      flex items-center justify-center cursor-col-resize\">\n          <svg className=\"w-6 h-6 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                  d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\" />\n          </svg>\n        </div>\n      </div>\n      \n      {/* Labels */}\n      <div className=\"absolute bottom-4 left-4 glass-button px-3 py-1 rounded-lg text-xs font-medium text-white\">\n        Original\n      </div>\n      <div className=\"absolute bottom-4 right-4 glass-button px-3 py-1 rounded-lg text-xs font-medium text-white\">\n        Dithered\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport { useDitherStore } from '@/store/useDitherStore';\nimport GlassCard from './GlassCard';\n\nexport default function PresetManager() {\n  const { presets, savePreset, loadPreset, deletePreset, settings } = useDitherStore();\n  const [isOpen, setIsOpen] = useState(false);\n  const [presetName, setPresetName] = useState('');\n  const [showSaveDialog, setShowSaveDialog] = useState(false);\n\n  const handleSave = () => {\n    if (presetName.trim()) {\n      savePreset(presetName.trim());\n      setPresetName('');\n      setShowSaveDialog(false);\n    }\n  };\n\n  const formatDate = (timestamp: number) => {\n    return new Date(timestamp).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => setIsOpen(true)}\n        className=\"glass-button px-4 py-2 rounded-xl text-white text-sm font-medium\n                 transition-all duration-200 flex items-center gap-2\"\n      >\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\" />\n        </svg>\n        Presets ({presets.length})\n      </button>\n\n      {/* Preset Manager Modal */}\n      {isOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/60 backdrop-blur-sm\"\n             onClick={() => setIsOpen(false)}>\n          <GlassCard className=\"max-w-2xl w-full max-h-[80vh] overflow-hidden animate-scale-in\"\n                     onClick={(e: React.MouseEvent) => e.stopPropagation()}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-white\">Presets</h2>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"glass-button p-2 rounded-xl text-white hover:bg-white/20\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"mb-6\">\n              <button\n                onClick={() => setShowSaveDialog(!showSaveDialog)}\n                className=\"w-full glass-button px-6 py-3 rounded-xl text-white font-medium\n                         transition-all duration-200 flex items-center justify-center gap-2\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                </svg>\n                Save Current Settings\n              </button>\n\n              {showSaveDialog && (\n                <div className=\"mt-4 flex gap-2\">\n                  <input\n                    type=\"text\"\n                    value={presetName}\n                    onChange={(e) => setPresetName(e.target.value)}\n                    placeholder=\"Preset name...\"\n                    className=\"flex-1 px-4 py-2 rounded-xl bg-white/10 border border-white/20\n                             text-white placeholder-white/50 backdrop-blur-md\n                             focus:outline-none focus:ring-2 focus:ring-glassAccent\"\n                    onKeyPress={(e) => e.key === 'Enter' && handleSave()}\n                    autoFocus\n                  />\n                  <button\n                    onClick={handleSave}\n                    className=\"glass-button px-6 py-2 rounded-xl text-white font-medium\"\n                  >\n                    Save\n                  </button>\n                </div>\n              )}\n            </div>\n\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n              {presets.length === 0 ? (\n                <div className=\"text-center text-white/60 py-8\">\n                  <svg className=\"w-16 h-16 mx-auto mb-4 opacity-40\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                          d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\n                  </svg>\n                  <p>No presets saved yet</p>\n                  <p className=\"text-sm mt-2\">Save your favorite settings for quick access</p>\n                </div>\n              ) : (\n                presets.map((preset) => (\n                  <div key={preset.timestamp}\n                       className=\"glass-panel p-4 rounded-xl flex items-center justify-between\n                                hover:bg-white/15 transition-all duration-200\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-white font-medium\">{preset.name}</h3>\n                      <p className=\"text-white/60 text-sm\">\n                        {preset.settings.algorithm} • {preset.settings.colorDepth} colors • {formatDate(preset.timestamp)}\n                      </p>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => {\n                          loadPreset(preset);\n                          setIsOpen(false);\n                        }}\n                        className=\"glass-button px-4 py-2 rounded-lg text-white text-sm font-medium\"\n                      >\n                        Load\n                      </button>\n                      <button\n                        onClick={() => deletePreset(preset.timestamp)}\n                        className=\"glass-button p-2 rounded-lg text-red-300 hover:text-red-400\"\n                      >\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </GlassCard>\n        </div>\n      )}\n    </>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport GlassCard from './GlassCard';\n\nexport default function KeyboardShortcuts() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const shortcuts = [\n    { key: 'Space', description: 'Toggle comparison view' },\n    { key: 'Ctrl/⌘ + Z', description: 'Undo' },\n    { key: 'Ctrl/⌘ + Shift + Z', description: 'Redo' },\n    { key: 'Ctrl/⌘ + S', description: 'Download PNG' },\n    { key: 'Ctrl/⌘ + E', description: 'Download SVG' },\n    { key: 'Ctrl/⌘ + O', description: 'Open image' },\n    { key: 'R', description: 'Reset settings' },\n    { key: 'C', description: 'Toggle color mode' },\n    { key: '?', description: 'Show keyboard shortcuts' },\n  ];\n\n  return (\n    <>\n      <button\n        onClick={() => setIsOpen(true)}\n        className=\"glass-button p-2 rounded-xl text-white hover:bg-white/20\n                 transition-all duration-200\"\n        title=\"Keyboard Shortcuts\"\n      >\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/60 backdrop-blur-sm\"\n             onClick={() => setIsOpen(false)}>\n          <GlassCard className=\"max-w-lg w-full animate-scale-in\"\n                     onClick={(e: React.MouseEvent) => e.stopPropagation()}>\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-white\">Keyboard Shortcuts</h2>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"glass-button p-2 rounded-xl text-white hover:bg-white/20\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"space-y-3\">\n              {shortcuts.map((shortcut, index) => (\n                <div key={index} className=\"flex justify-between items-center py-2\">\n                  <span className=\"text-white/80\">{shortcut.description}</span>\n                  <kbd className=\"px-3 py-1 bg-white/10 border border-white/20 rounded-lg\n                               text-white text-sm font-mono\">\n                    {shortcut.key}\n                  </kbd>\n                </div>\n              ))}\n            </div>\n          </GlassCard>\n        </div>\n      )}\n    </>\n  );\n}\n","'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDitherStore } from '@/store/useDitherStore';\nimport { applyDithering } from '@/lib/dithering';\nimport { animateWebGLShader, applyWebGLShader, isAnimatedShader } from '@/lib/shaders/shaderRenderer';\nimport { ShaderProgram } from '@/lib/shaders/ShaderProgram';\nimport GlassCard from './GlassCard';\nimport ComparisonSlider from './ComparisonSlider';\nimport PresetManager from './PresetManager';\nimport KeyboardShortcuts from './KeyboardShortcuts';\n\nexport default function DitherCanvas() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const shaderProgramRef = useRef<ShaderProgram | null>(null);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  const { \n    originalImage, \n    settings, \n    imageDataUrl, \n    showComparison,\n    setShowComparison,\n    isProcessing,\n    setIsProcessing \n  } = useDitherStore();\n\n  // WebGL shader list\n  const webglShaders = [\n    'raymarching-spheres', 'mandelbrot', 'voronoi', 'plasma', 'kaleidoscope',\n    'rgb-split', 'glitch', 'pixel-dither', 'wave-distortion', 'tunnel',\n    'ripple', 'oil-painting', 'mosaic', 'mosaic-tiles', 'pixelate',\n    'chromatic', 'heatmap', 'vignette', 'swirl', 'mirror'\n  ];\n  \n  const isWebGLShader = webglShaders.includes(settings.filter);\n  const needsAnimation = isAnimatedShader(settings.filter);\n\n  useEffect(() => {\n    if (!originalImage || !canvasRef.current) return;\n\n    // Cleanup previous shader\n    if (shaderProgramRef.current) {\n      shaderProgramRef.current.destroy();\n      shaderProgramRef.current = null;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n\n    const processImage = async () => {\n      if (!canvasRef.current) return;\n\n      try {\n        if (isWebGLShader) {\n          // Use WebGL shader\n          const canvas = canvasRef.current;\n          \n          if (needsAnimation) {\n            shaderProgramRef.current = animateWebGLShader(\n              canvas,\n              originalImage,\n              settings.filter as any,\n              settings\n            );\n          } else {\n            shaderProgramRef.current = applyWebGLShader(\n              canvas,\n              originalImage,\n              settings.filter as any,\n              settings\n            );\n          }\n\n          if (!shaderProgramRef.current) {\n            throw new Error('WebGL shader failed to initialize');\n          }\n        } else {\n          // Use Canvas 2D API\n          await new Promise(resolve => {\n            requestAnimationFrame(() => {\n              if (canvasRef.current && originalImage) {\n                applyDithering(canvasRef.current, originalImage, settings);\n              }\n              resolve(null);\n            });\n          });\n        }\n        \n        setIsProcessing(false);\n      } catch (err) {\n        console.error('Processing error:', err);\n        setError(err instanceof Error ? err.message : 'Processing failed');\n        \n        // Fallback to Canvas 2D\n        if (canvasRef.current) {\n          const tempSettings = { ...settings, filter: 'none' as any };\n          applyDithering(canvasRef.current, originalImage, tempSettings);\n        }\n        \n        setIsProcessing(false);\n      }\n    };\n\n    processImage();\n\n    return () => {\n      if (shaderProgramRef.current) {\n        shaderProgramRef.current.destroy();\n        shaderProgramRef.current = null;\n      }\n    };\n  }, [originalImage, settings, isWebGLShader, needsAnimation, setIsProcessing]);\n\n  const handleDownload = () => {\n    if (!canvasRef.current) return;\n\n    const link = document.createElement('a');\n    const effectName = settings.filter !== 'none' ? settings.filter : settings.algorithm;\n    link.download = `ditherlab-${effectName}-${Date.now()}.png`;\n    link.href = canvasRef.current.toDataURL('image/png');\n    link.click();\n  };\n\n  const handleDownloadSVG = () => {\n    if (!canvasRef.current || isWebGLShader) {\n      alert('SVG export is only available for dithering algorithms');\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    \n    // Create a temporary 2D context to read pixels\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    const tempCtx = tempCanvas.getContext('2d');\n    if (!tempCtx) return;\n    \n    tempCtx.drawImage(canvas, 0, 0);\n    const imageData = tempCtx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imageData.data;\n    \n    let svgContent = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${canvas.width}\" height=\"${canvas.height}\" viewBox=\"0 0 ${canvas.width} ${canvas.height}\">`;\n\n    for (let y = 0; y < canvas.height; y++) {\n      for (let x = 0; x < canvas.width; x++) {\n        const i = (y * canvas.width + x) * 4;\n        const r = data[i];\n        const g = data[i + 1];\n        const b = data[i + 2];\n        svgContent += `<rect x=\"${x}\" y=\"${y}\" width=\"1\" height=\"1\" fill=\"rgb(${r},${g},${b})\"/>`;\n      }\n    }\n\n    svgContent += '</svg>';\n\n    const blob = new Blob([svgContent], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    const effectName = settings.filter !== 'none' ? settings.filter : settings.algorithm;\n    link.download = `ditherlab-${effectName}-${Date.now()}.svg`;\n    link.href = url;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const toggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n\n  if (!imageDataUrl) return null;\n\n  return (\n    <>\n      <GlassCard className=\"animate-slide-up\">\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center mb-4 gap-3\">\n          <h2 className=\"text-2xl font-semibold text-white\">Preview</h2>\n          <div className=\"flex flex-wrap gap-3\">\n            <PresetManager />\n            <KeyboardShortcuts />\n            \n            <button\n              onClick={() => setShowComparison(!showComparison)}\n              className={`glass-button px-4 py-2 rounded-xl text-white text-sm font-medium\n                       transition-all duration-200 ${showComparison ? 'bg-glassAccent/60' : ''}`}\n              title=\"Toggle Comparison (Space)\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                      d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n              </svg>\n            </button>\n            \n            <button\n              onClick={toggleFullscreen}\n              className=\"glass-button px-4 py-2 rounded-xl text-white text-sm font-medium\n                       transition-all duration-200\"\n            >\n              {isFullscreen ? 'Exit' : 'Fullscreen'}\n            </button>\n            <button\n              onClick={handleDownload}\n              className=\"glass-button px-4 py-2 rounded-xl text-white text-sm font-medium\n                       transition-all duration-200 flex items-center gap-2\"\n              title=\"Download PNG (Ctrl+S)\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                      d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n              </svg>\n              PNG\n            </button>\n            {!isWebGLShader && (\n              <button\n                onClick={handleDownloadSVG}\n                className=\"glass-button px-4 py-2 rounded-xl text-white text-sm font-medium\n                         transition-all duration-200 flex items-center gap-2\"\n                title=\"Download SVG (Ctrl+E)\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                        d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                </svg>\n                SVG\n              </button>\n            )}\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"mb-4 glass-panel p-4 rounded-xl border-2 border-red-500/50\">\n            <div className=\"flex items-center gap-2 text-red-300 text-sm\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                      d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              {error} - Falling back to Canvas 2D\n            </div>\n          </div>\n        )}\n\n        {isProcessing && (\n          <div className=\"mb-4 flex items-center gap-2 text-white/70 text-sm\">\n            <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n            Processing{isWebGLShader ? ' with WebGL' : ''}...\n          </div>\n        )}\n\n        {showComparison ? (\n          <ComparisonSlider\n            originalSrc={imageDataUrl}\n            ditheredCanvas={canvasRef.current}\n          />\n        ) : (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Original Image */}\n            <div>\n              <h3 className=\"text-lg font-medium text-white/80 mb-3\">Original</h3>\n              <div className=\"rounded-xl overflow-hidden bg-black/20 border border-white/10\">\n                <img \n                  src={imageDataUrl} \n                  alt=\"Original\" \n                  className=\"w-full h-auto\"\n                />\n              </div>\n            </div>\n\n            {/* Processed Image */}\n            <div>\n              <h3 className=\"text-lg font-medium text-white/80 mb-3 flex items-center gap-2\">\n                Processed ({settings.filter !== 'none' ? settings.filter : settings.algorithm})\n                {isWebGLShader && (\n                  <span className=\"text-xs bg-green-500/20 text-green-300 px-2 py-1 rounded-lg border border-green-500/30\">\n                    WebGL\n                  </span>\n                )}\n              </h3>\n              <div className=\"rounded-xl overflow-hidden bg-black/20 border border-white/10 relative\">\n                <canvas\n                  ref={canvasRef}\n                  className=\"w-full h-auto\"\n                  style={{ imageRendering: 'pixelated' }}\n                />\n                {needsAnimation && (\n                  <div className=\"absolute top-2 right-2 glass-button px-2 py-1 rounded text-xs text-white flex items-center gap-1\">\n                    <span className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></span>\n                    LIVE 60fps\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </GlassCard>\n\n      {/* Fullscreen Modal */}\n      {isFullscreen && (\n        <div \n          className=\"fixed inset-0 z-50 bg-black/90 backdrop-blur-xl flex items-center justify-center p-4\"\n          onClick={toggleFullscreen}\n        >\n          <button\n            className=\"absolute top-6 right-6 glass-button p-3 rounded-full text-white z-10 hover:scale-110 transition-transform\"\n            onClick={toggleFullscreen}\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n          <div className=\"max-w-full max-h-full overflow-auto\">\n            {showComparison ? (\n              <div className=\"w-[90vw] max-w-6xl\">\n                <ComparisonSlider\n                  originalSrc={imageDataUrl}\n                  ditheredCanvas={canvasRef.current}\n                />\n              </div>\n            ) : (\n              <canvas\n                ref={canvasRef}\n                className=\"max-w-full max-h-[90vh] w-auto h-auto shadow-2xl\"\n                style={{ imageRendering: 'pixelated' }}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","'use client';\n\nimport UploadArea from '@/components/UploadArea';\nimport ControlPanel from '@/components/ControlPanel';\nimport DitherCanvas from '@/components/DitherCanvas';\nimport GlassCard from '@/components/GlassCard';\nimport { useDitherStore } from '@/store/useDitherStore';\n\nexport default function HomePage() {\n  const { imageDataUrl, showTutorial, setShowTutorial } = useDitherStore();\n\n  return (\n    <main className=\"min-h-screen py-8 px-4 md:px-8 lg:px-12\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-12 animate-fade-in\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"w-16 h-16 rounded-2xl bg-glassAccent backdrop-blur-xl \n                          flex items-center justify-center border border-white/20 shadow-glass\">\n              <svg className=\"w-10 h-10 text-white\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"2\" y=\"2\" width=\"4\" height=\"4\" />\n                <rect x=\"10\" y=\"2\" width=\"4\" height=\"4\" />\n                <rect x=\"18\" y=\"2\" width=\"4\" height=\"4\" />\n                <rect x=\"6\" y=\"6\" width=\"4\" height=\"4\" />\n                <rect x=\"14\" y=\"6\" width=\"4\" height=\"4\" />\n                <rect x=\"2\" y=\"10\" width=\"4\" height=\"4\" />\n                <rect x=\"10\" y=\"10\" width=\"4\" height=\"4\" />\n                <rect x=\"18\" y=\"10\" width=\"4\" height=\"4\" />\n                <rect x=\"6\" y=\"14\" width=\"4\" height=\"4\" />\n                <rect x=\"14\" y=\"14\" width=\"4\" height=\"4\" />\n                <rect x=\"2\" y=\"18\" width=\"4\" height=\"4\" />\n                <rect x=\"10\" y=\"18\" width=\"4\" height=\"4\" />\n                <rect x=\"18\" y=\"18\" width=\"4\" height=\"4\" />\n              </svg>\n            </div>\n          </div>\n          <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-4 tracking-tight\">\n            DitherLab\n          </h1>\n          <p className=\"text-xl text-white/70 max-w-2xl mx-auto\">\n            Create pixel-perfect halftone and glitch art in your browser\n          </p>\n          <p className=\"text-sm text-white/50 mt-2\">\n            11 dithering algorithms • 28 shader effects • WebGL/GLSL • Real-time • No uploads\n          </p>\n        </div>\n\n        {!imageDataUrl && (\n          <>\n            {/* Tutorial Card */}\n            {showTutorial && (\n              <GlassCard className=\"mb-8 animate-slide-up\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <h3 className=\"text-xl font-semibold text-white\">Quick Start Guide</h3>\n                  <button\n                    onClick={() => setShowTutorial(false)}\n                    className=\"glass-button p-2 rounded-lg text-white/70 hover:text-white\"\n                  >\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                      <span className=\"text-2xl\">📤</span>\n                    </div>\n                    <h4 className=\"text-white font-medium mb-2\">1. Upload Image</h4>\n                    <p className=\"text-white/60 text-sm\">\n                      Drag & drop or click to upload any PNG, JPG, or WebP image\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                      <span className=\"text-2xl\">🎨</span>\n                    </div>\n                    <h4 className=\"text-white font-medium mb-2\">2. Choose Style</h4>\n                    <p className=\"text-white/60 text-sm\">\n                      Pick from 11 dithering algorithms or 28 shader effects (WebGL/GLSL)\n                    </p>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                      <span className=\"text-2xl\">⚙️</span>\n                    </div>\n                    <h4 className=\"text-white font-medium mb-2\">3. Fine-tune</h4>\n                    <p className=\"text-white/60 text-sm\">\n                      Adjust brightness, contrast, color depth, and more\n                    </p>\n                  </div>\n                </div>\n              </GlassCard>\n            )}\n\n            {/* Features Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n              <GlassCard className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                          d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-white font-semibold mb-1\">Lightning Fast</h3>\n                <p className=\"text-white/60 text-sm\">Real-time processing with Canvas API & WebGL</p>\n              </GlassCard>\n\n              <GlassCard className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                          d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-white font-semibold mb-1\">Private & Secure</h3>\n                <p className=\"text-white/60 text-sm\">All processing happens in your browser</p>\n              </GlassCard>\n\n              <GlassCard className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                          d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-white font-semibold mb-1\">39 Effects</h3>\n                <p className=\"text-white/60 text-sm\">11 dithering + 28 shaders (WebGL/GLSL)</p>\n              </GlassCard>\n\n              <GlassCard className=\"text-center\">\n                <div className=\"w-12 h-12 mx-auto mb-3 bg-glassAccent/40 rounded-xl flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                          d=\"M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-white font-semibold mb-1\">Export Ready</h3>\n                <p className=\"text-white/60 text-sm\">Download as PNG or SVG</p>\n              </GlassCard>\n            </div>\n          </>\n        )}\n\n        {/* Main Content */}\n        <div className={imageDataUrl ? \"grid grid-cols-1 lg:grid-cols-3 gap-6\" : \"\"}>\n          {/* Left Column - Upload & Controls */}\n          <div className={imageDataUrl ? \"lg:col-span-1 space-y-6\" : \"\"}>\n            <GlassCard className=\"animate-slide-up\">\n              <UploadArea />\n            </GlassCard>\n            {imageDataUrl && <ControlPanel />}\n          </div>\n\n          {/* Right Column - Canvas Preview */}\n          {imageDataUrl && (\n            <div className=\"lg:col-span-2\">\n              <DitherCanvas />\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"text-center mt-12 animate-fade-in\">\n          <div className=\"glass-panel rounded-2xl p-6 inline-block\">\n            <div className=\"flex flex-wrap items-center justify-center gap-6 text-white/60 text-sm\">\n              <span className=\"flex items-center gap-2\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                        d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                </svg>\n                WebGL + Canvas API\n              </span>\n              <span>•</span>\n              <span className=\"flex items-center gap-2\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                        d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n                60fps Shaders\n              </span>\n              <span>•</span>\n              <span className=\"flex items-center gap-2\">\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                        d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                100% Private\n              </span>\n            </div>\n            <div className=\"mt-4 text-white/40 text-xs\">\n              Built with Next.js 16, TypeScript, WebGL/GLSL, Tailwind CSS & Zustand\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[2,3,4]}